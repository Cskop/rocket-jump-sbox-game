@using Sandbox;
@using Sandbox.UI;
@using System;
@using System.Collections.Generic;
@using System.Linq;

@namespace MyGame
@inherits RootPanel
@attribute [StyleSheet]

<root>
    <ChatBox/>
    <VoiceList/>

    <div class="header">
        <label>Rocket Jump Beta</label>
        <label class="subtitle">Control: RMB - jump. R - respawn. tab - score</label>
    </div>
    <div class="jump">
        <label @ref=JumpLabel></label>
    </div>
    <div class="scoreboard">
        <label @ref=ScoreBoard></label>
    </div>
    <div class="info">
        <label class="health" @ref=HealthLabel></label>
    </div>
    <div class="Velocity">
        <label @ref=Velocity></label>
    </div>
    <div class="crosshair"></div>
</root>

@code
{
    public Label HealthLabel {get; set;}
    public Label JumpLabel {get; set;}
    public Label Velocity {get; set;}
    public Label ScoreBoard {get; set;}

    public override void Tick() {
        var k = "";
        var pawn = (Game.LocalPawn as Pawn);
        if ( pawn == null )
            return;
        IClient[] clients = Game.Clients.ToArray();
        IClient winner = clients[0];
        for ( int i = 0; i < clients.Length; i++ )
	    {
		    if ( (clients[i].Pawn as Pawn).Velocity.Length > (winner.Pawn as Pawn).Velocity.Length ) 
            {
                winner = clients[i];
            }
	    }
        Velocity.Text = $"Velocity: {pawn.Velocity.Length.ToString("F2")}\nMax Velocity By: {winner.Name}";
        if ( (MyGame.Current as MyGame).gamemode == 1 && pawn != null)
			        k = $"Collected: {pawn.countCollected}";
        var health = pawn.Health.ToString("F2");
        HealthLabel.Text = $"Health: {health}\nmode: {(MyGame.Current as MyGame).gamemode}\n" + k;

        var scoreBoard = "";
        if ( pawn.scoreboard || (MyGame.Current as MyGame).gamemode == 2 ) {
	        for ( int i = 0; i < clients.Length; i++ )
	        {
		        scoreBoard += $"{clients[i].Name} - Killed: {(clients[i].Pawn as Pawn).Killed}, Deaths: {(clients[i].Pawn as Pawn).Deaths}, Velocity: {(clients[i].Pawn as Pawn).Velocity.Length.ToString("F2")}, Ping: {clients[i].Ping}\n";
	        }
        }
        ScoreBoard.Text = scoreBoard;
    }
}